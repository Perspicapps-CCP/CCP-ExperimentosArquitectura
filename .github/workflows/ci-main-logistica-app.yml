name: Run CI for python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ccp-perspicapps
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/ccp-perspicapps/ccp-images/

permissions:
  contents: read

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13.1"
    - name: Install pipenv
      working-directory: ./logistica
      run: pip install pipenv
    - name: Install dependencies      
      working-directory: ./logistica
      run: pipenv install --dev --system --deploy
    - name: Run unit tests
      working-directory: ./logistica
      run: pipenv run pytest --cov=. -v -s --cov-fail-under=70

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Generate version tag
        id: generate_tag
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          DATE=$(date +'%Y%m%d')
          COMMITS_TODAY=$(git rev-list --count --after="midnight" HEAD)
          VERSION_TAG="v${DATE}.${COMMITS_TODAY}.${SHORT_SHA}"
          echo "version_tag=${VERSION_TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: ${VERSION_TAG}"

      - name: Auth gcp project
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Docker auth
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        working-directory: ./logistica
        run: |
          docker build . --tag ${{ env.GAR_LOCATION }}logistica:${{ steps.generate_tag.outputs.version_tag }}
          docker build . --tag ${{ env.GAR_LOCATION }}logistica:latest
        
      - name: Push image
        run: |
          docker push ${{ env.GAR_LOCATION }}logistica:${{ steps.generate_tag.outputs.version_tag }}
          docker push ${{ env.GAR_LOCATION }}logistica:latest
